// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    //aflag
    And(a=notsel0, b=notsel1, out=atmp);
    And(a=atmp, b=notsel2, out=aflag);
    
    //bflag
    And(a=sel[0], b=notsel1, out=btmp);
    And(a=btmp, b=notsel2, out=bflag);

    //cflag
    And(a=notsel0, b=sel[1], out=ctmp);
    And(a=ctmp, b=notsel2, out=cflag);

    //dflag
    And(a=sel[0], b=sel[1], out=dtmp);
    And(a=dtmp, b=notsel2, out=dflag);

    //eflag
    And(a=notsel0, b=notsel1, out=etmp);
    And(a=etmp, b=sel[2], out=eflag);

    //fflag
    And(a=sel[0], b=notsel1, out=ftmp);
    And(a=ftmp, b=sel[2], out=fflag);

    //gflag
    And(a=notsel0, b=sel[1], out=gtmp);
    And(a=gtmp, b=sel[2], out=gflag);

    //hflag
    And(a=sel[0], b=sel[1], out=htmp);
    And(a=htmp, b=sel[2], out=hflag);

    And(a=in, b=aflag, out=a);
    And(a=in, b=bflag, out=b);
    And(a=in, b=cflag, out=c);
    And(a=in, b=dflag, out=d);
    And(a=in, b=eflag, out=e);
    And(a=in, b=fflag, out=f);
    And(a=in, b=gflag, out=g);
    And(a=in, b=hflag, out=h);
}